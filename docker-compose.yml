version: "3.8"

services:

  4d2d:
    container_name: 4d2d
    hostname: 4d2d
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - 4d2d-db
    networks:
      - network 

  4d2d-db:
    image: postgres:15.3
    container_name: 4d2d_db
    hostname: 4d2d-db
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - network

  rabbitmq:
      image: rabbitmq:3.13-management-alpine
      container_name: 'rabbitmq'
      ports:
        - 5672:5672
        - 15672:15672
      volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
        - type: bind
          source: ./rabbitmq-enabled-plugins
          target: /etc/rabbitmq/enabled_plugins
        - type: bind
          source: ./rabbitmq.config
          target: /etc/rabbitmq/rabbitmq.config
        - type: bind
          source: ./rabbitmq-defs.json
          target: /etc/rabbitmq/rabbitmq-defs.json
      networks:
        - network

  nextjs:
    container_name: nextjs
    build:
      context: ./nextjs
      target: dev
    restart: always
    command: yarn dev
    environment:
      - NODE_ENV=development 
    volumes:
      - ./nextjs:/app
      - /node_modules
      - /app/.next
    ports:
      - 3000:3000
    networks:
      - network


networks:
  network:
    name: network